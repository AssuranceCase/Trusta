digraph G {

    // Attributes
    graph [ overlap = "scalexy", fontname = "Verdana", fontsize = "7", fontcolor = "#0000007f", label = "Generated by Python Call Graph v1.0.1\nhttp://pycallgraph.slowchop.com" ];
    node [ fontname = "Verdana", fontsize = "7", fontcolor = "#000000ff", style = "filled", shape = "rect" ];
    edge [ fontname = "Verdana", fontsize = "7", fontcolor = "#000000ff" ];

    // Groups
    subgraph "cluster___main__" { "__main__"; label = "__main__"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_infer_call" { "infer_call.infer.Infer" "infer_call.infer.ElapsedTime.__init__" "infer_call.infer.ElapsedTime.ms_timestamp" "infer_call.minio_oper.MinioOper.__init__" "infer_call.minio_oper.MinioOper.download_file" "infer_call.minio_oper.MinioOper.unzip_file" "infer_call.infer_event.InferEvent.info" "infer_call.infer.one_model_infer_exec" "infer_call.infer_model.InferModel.__init__" "infer_call.infer_model.InferModel.load"; label = "infer_call"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_infer_image" { "infer_image.InferImage.__init__" "infer_image.InferImage.download_infer_images" "infer_image.InferImage.clear_tmp_images_dir" "infer_image.InferImage.__del__"; label = "infer_image"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_infer_json" { "infer_json.InferJson.__init__" "infer_json.InferJson.image_list_to_model_list" "infer_json.InferJson.get_infer_image" "infer_json.InferJson.merge_result_to_image_list"; label = "infer_json"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_infer_exec" { "infer_exec.InferExec.__init__" "infer_exec.InferExec.infer_classifier" "infer_exec.InferExec.parse_model_json_info" "infer_exec.InferExec.label_threshold_to_array" "infer_exec.ETATimeIter.print_info"; label = "infer_exec"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }

    // Nodes
    "__main__" [color = "#dde4e5ff", label = "__main__\ncalls: 1\ntime: 0.000000s"];
    "infer_call.infer.Infer" [color = "#e544d5ff", label = "infer_call.infer.Infer\ncalls: 1\ntime: 9.922854s"];
    "infer_call.infer.ElapsedTime.__init__" [color = "#dde4e5ff", label = "infer_call.infer.ElapsedTime.__init__\ncalls: 1\ntime: 0.000000s"];
    "infer_call.infer.ElapsedTime.ms_timestamp" [color = "#9999e5ff", label = "infer_call.infer.ElapsedTime.ms_timestamp\ncalls: 10\ntime: 0.000000s"];
    "infer_image.InferImage.__init__" [color = "#dde4e5ff", label = "infer_image.InferImage.__init__\ncalls: 1\ntime: 0.000000s"];
    "infer_image.InferImage.download_infer_images" [color = "#d8e3e5ff", label = "infer_image.InferImage.download_infer_images\ncalls: 1\ntime: 0.326414s"];
    "infer_call.minio_oper.MinioOper.__init__" [color = "#dce4e5ff", label = "infer_call.minio_oper.MinioOper.__init__\ncalls: 1\ntime: 0.080448s"];
    "infer_call.minio_oper.MinioOper.download_file" [color = "#d4e1e5ff", label = "infer_call.minio_oper.MinioOper.download_file\ncalls: 2\ntime: 0.136437s"];
    "infer_call.minio_oper.MinioOper.unzip_file" [color = "#dce4e5ff", label = "infer_call.minio_oper.MinioOper.unzip_file\ncalls: 1\ntime: 0.098564s"];
    "infer_call.infer_event.InferEvent.info" [color = "#bfd2e5ff", label = "infer_call.infer_event.InferEvent.info\ncalls: 5\ntime: 0.013952s"];
    "infer_json.InferJson.__init__" [color = "#dde4e5ff", label = "infer_json.InferJson.__init__\ncalls: 1\ntime: 0.000000s"];
    "infer_json.InferJson.image_list_to_model_list" [color = "#dde4e5ff", label = "infer_json.InferJson.image_list_to_model_list\ncalls: 1\ntime: 0.012469s"];
    "infer_json.InferJson.get_infer_image" [color = "#9998e5ff", label = "infer_json.InferJson.get_infer_image\ncalls: 10\ntime: 0.011474s"];
    "infer_call.infer.one_model_infer_exec" [color = "#e54ae0ff", label = "infer_call.infer.one_model_infer_exec\ncalls: 1\ntime: 9.573131s"];
    "infer_exec.InferExec.__init__" [color = "#dde4e5ff", label = "infer_exec.InferExec.__init__\ncalls: 1\ntime: 0.000000s"];
    "infer_exec.InferExec.infer_classifier" [color = "#e54ae1ff", label = "infer_exec.InferExec.infer_classifier\ncalls: 1\ntime: 9.563882s"];
    "infer_call.infer_model.InferModel.__init__" [color = "#dde4e5ff", label = "infer_call.infer_model.InferModel.__init__\ncalls: 1\ntime: 0.000000s"];
    "infer_call.infer_model.InferModel.load" [color = "#dde4e5ff", label = "infer_call.infer_model.InferModel.load\ncalls: 1\ntime: 0.000000s"];
    "infer_exec.InferExec.parse_model_json_info" [color = "#dde4e5ff", label = "infer_exec.InferExec.parse_model_json_info\ncalls: 1\ntime: 0.000000s"];
    "infer_exec.InferExec.label_threshold_to_array" [color = "#dde4e5ff", label = "infer_exec.InferExec.label_threshold_to_array\ncalls: 1\ntime: 0.000000s"];
    "infer_exec.ETATimeIter.print_info" [color = "#dde4e5ff", label = "infer_exec.ETATimeIter.print_info\ncalls: 1\ntime: 0.000000s"];
    "infer_json.InferJson.merge_result_to_image_list" [color = "#dde4e5ff", label = "infer_json.InferJson.merge_result_to_image_list\ncalls: 1\ntime: 0.001000s"];
    "infer_image.InferImage.clear_tmp_images_dir" [color = "#d6e2e5ff", label = "infer_image.InferImage.clear_tmp_images_dir\ncalls: 2\ntime: 0.008835s"];
    "infer_image.InferImage.__del__" [color = "#dde4e5ff", label = "infer_image.InferImage.__del__\ncalls: 1\ntime: 0.000000s"];

    // Edges
    "__main__" -> "infer_call.infer.Infer" [color = "#b235a6ff", label = "1"];
    "__main__" -> "infer_image.InferImage.__del__" [color = "#acb1b2ff", label = "1"];
    "infer_call.infer.Infer" -> "infer_call.infer.ElapsedTime.__init__" [color = "#acb1b2ff", label = "1"];
    "infer_call.infer.Infer" -> "infer_call.infer.ElapsedTime.ms_timestamp" [color = "#7777b2ff", label = "10"];
    "infer_call.infer.Infer" -> "infer_image.InferImage.__init__" [color = "#acb1b2ff", label = "1"];
    "infer_call.infer.Infer" -> "infer_image.InferImage.download_infer_images" [color = "#a8b0b2ff", label = "1"];
    "infer_call.infer.Infer" -> "infer_json.InferJson.__init__" [color = "#acb1b2ff", label = "1"];
    "infer_call.infer.Infer" -> "infer_json.InferJson.image_list_to_model_list" [color = "#acb1b2ff", label = "1"];
    "infer_call.infer.Infer" -> "infer_call.infer.one_model_infer_exec" [color = "#b239aeff", label = "1"];
    "infer_call.infer.Infer" -> "infer_json.InferJson.merge_result_to_image_list" [color = "#acb1b2ff", label = "1"];
    "infer_call.infer.Infer" -> "infer_image.InferImage.clear_tmp_images_dir" [color = "#acb1b2ff", label = "1"];
    "infer_image.InferImage.download_infer_images" -> "infer_call.minio_oper.MinioOper.__init__" [color = "#abb1b2ff", label = "1"];
    "infer_image.InferImage.download_infer_images" -> "infer_call.minio_oper.MinioOper.download_file" [color = "#a4afb2ff", label = "2"];
    "infer_image.InferImage.download_infer_images" -> "infer_call.minio_oper.MinioOper.unzip_file" [color = "#abb1b2ff", label = "1"];
    "infer_image.InferImage.download_infer_images" -> "infer_call.infer_event.InferEvent.info" [color = "#a6b0b2ff", label = "2"];
    "infer_json.InferJson.image_list_to_model_list" -> "infer_json.InferJson.get_infer_image" [color = "#7776b2ff", label = "10"];
    "infer_call.infer.one_model_infer_exec" -> "infer_exec.InferExec.__init__" [color = "#acb1b2ff", label = "1"];
    "infer_call.infer.one_model_infer_exec" -> "infer_exec.InferExec.infer_classifier" [color = "#b239afff", label = "1"];
    "infer_exec.InferExec.infer_classifier" -> "infer_call.infer_event.InferEvent.info" [color = "#a0adb2ff", label = "3"];
    "infer_exec.InferExec.infer_classifier" -> "infer_call.infer_model.InferModel.__init__" [color = "#acb1b2ff", label = "1"];
    "infer_exec.InferExec.infer_classifier" -> "infer_call.infer_model.InferModel.load" [color = "#acb1b2ff", label = "1"];
    "infer_exec.InferExec.infer_classifier" -> "infer_exec.InferExec.parse_model_json_info" [color = "#acb1b2ff", label = "1"];
    "infer_exec.InferExec.infer_classifier" -> "infer_exec.InferExec.label_threshold_to_array" [color = "#acb1b2ff", label = "1"];
    "infer_image.InferImage.__del__" -> "infer_image.InferImage.clear_tmp_images_dir" [color = "#acb1b2ff", label = "1"];

}